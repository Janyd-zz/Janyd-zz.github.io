<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - Janydの博客 - 在记录中成长自己</title>
        <link>https://Janyd-zz.github.io/posts/</link>
        <description>所有文章 | Janydの博客 - 在记录中成长自己</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>875392448@qq.com (Janyd)</managingEditor>
            <webMaster>875392448@qq.com (Janyd)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 27 Jan 2025 14:39:47 &#43;0800</lastBuildDate><atom:link href="https://Janyd-zz.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Linkqueue</title>
    <link>https://Janyd-zz.github.io/24_linkqueue/</link>
    <pubDate>Mon, 27 Jan 2025 14:39:47 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://Janyd-zz.github.io/24_linkqueue/</guid>
    <description><![CDATA[linklist.h 1 2 3 4 5 6 7 8 9 10 11 12 13 14 typedef void LinkList; typedef struct _tag_LinkListNode { struct _tag_LinkListNode *next; }LinkListNode; LinkList *LinkList_Create(); void LinkList_Destroy(LinkList *list); void LinkList_Clear(LinkList *list); int LinkList_Length(LinkList *list); int LinkList_Insert(LinkList *list, LinkListNode *node, int pos); LinkListNode *LinkList_Get(LinkList *list, int pos); LinkListNode *LinkList_Delete(LinkList *list, int pos); linkqueue.h 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15]]></description>
</item>
<item>
    <title>Seqqueue</title>
    <link>https://Janyd-zz.github.io/23_seqqueue/</link>
    <pubDate>Sat, 25 Jan 2025 14:39:47 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://Janyd-zz.github.io/23_seqqueue/</guid>
    <description><![CDATA[seqlist.h 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 typedef void SeqList; typedef void SeqListNode; SeqList* SeqList_Create(int capacity); void SeqList_Destroy(SeqList* list); void SeqList_Clear(SeqList* list); int SeqList_Length(SeqList* list); int SeqList_Capacity(SeqList* list); int SeqList_Insert(SeqList* list, SeqListNode* node, int pos); SeqListNode* SeqList_Get(SeqList* list, int pos); SeqListNode* SeqList_Delete(SeqList* list, int pos); seqqueue.h 1 2 3 4 5 6 7 8 9 10 11 12]]></description>
</item>
<item>
    <title>Linkstack</title>
    <link>https://Janyd-zz.github.io/22_linkstack/</link>
    <pubDate>Mon, 20 Jan 2025 14:39:47 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://Janyd-zz.github.io/22_linkstack/</guid>
    <description><![CDATA[linklist.h 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 typedef struct _tag_LinkListNode { struct _tag_LinkListNode *next; }LinkListNode; typedef struct _tag_LinkList { LinkListNode header; int length; }TLinkList; TLinkList *LinkList_Create(); void LinkList_Destroy(TLinkList *list); void LinkList_Clear(TLinkList *list); int LinkList_Length(TLinkList *list); int LinkList_Insert(TLinkList *list, LinkListNode *node, int pos); LinkListNode *LinkList_Get(TLinkList *list, int pos); LinkListNode *LinkList_Delete(TLinkList *list, int pos); linkstack.h 1 2 3 4]]></description>
</item>
<item>
    <title>Linux配置</title>
    <link>https://Janyd-zz.github.io/17_linux%E9%85%8D%E7%BD%AE/</link>
    <pubDate>Sun, 19 Jan 2025 14:39:47 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://Janyd-zz.github.io/17_linux%E9%85%8D%E7%BD%AE/</guid>
    <description><![CDATA[1. Ubuntu1804更换软件源 清华大学开源软件镜像站 https://mirrors.tuna.tsinghua.edu.cn/ 使用帮助-&gt;选择“Ubuntu”-&gt;勾选相关选项，生成源list 将sou]]></description>
</item>
<item>
    <title>Seqstack</title>
    <link>https://Janyd-zz.github.io/21_seqstack/</link>
    <pubDate>Sun, 19 Jan 2025 14:39:47 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://Janyd-zz.github.io/21_seqstack/</guid>
    <description><![CDATA[seqlist.h 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 typedef void SeqList; typedef void SeqListNode; SeqList* SeqList_Create(int capacity); void SeqList_Destroy(SeqList* list); void SeqList_Clear(SeqList* list); int SeqList_Length(SeqList* list); int SeqList_Capacity(SeqList* list); int SeqList_Insert(SeqList* list, SeqListNode* node, int pos); SeqListNode* SeqList_Get(SeqList* list, int pos); SeqListNode* SeqList_Delete(SeqList* list, int pos); seqstack.h 1 2 3 4 5 6 7 8 9 10 11 12]]></description>
</item>
<item>
    <title>DLinklist</title>
    <link>https://Janyd-zz.github.io/20_dlinklist/</link>
    <pubDate>Mon, 13 Jan 2025 14:39:47 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://Janyd-zz.github.io/20_dlinklist/</guid>
    <description><![CDATA[dlinklist.h 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 typedef void DLinkList; typedef struct _tag_DLinkListNode { struct _tag_DLinkListNode * next; struct _tag_DLinkListNode * pre; }DLinkListNode;//小圆点 DLinkList *DLinkList_Ceate(); void DLinkList_Destroy(DLinkList* list); void DLinkList_Clear(DLinkList* list); int DLinkList_Length(DLinkList* list); DLinkListNode* DLinkList_Get(DLinkList*]]></description>
</item>
<item>
    <title>Circlelist</title>
    <link>https://Janyd-zz.github.io/19_circlelist/</link>
    <pubDate>Thu, 09 Jan 2025 14:39:47 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://Janyd-zz.github.io/19_circlelist/</guid>
    <description><![CDATA[circlelist.h 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 typedef void CircleList; typedef struct _tag_CircleListNode { struct _tag_CircleListNode * next; }CircleListNode; CircleList* CircleList_Create(); void CircleList_Destroy(CircleList* list); void CircleList_Clear(CircleList* list); int CircleList_Length(CircleList* list); CircleListNode* CircleList_Get(CircleList* list, int pos); int CircleList_Insert(CircleList* list, CircleListNode* node, int pos); CircleListNode* CircleList_Delete(CircleList* list, int pos); CircleListNode* CircleList_DeleteNode(CircleList* list, CircleListNode* node); CircleListNode* CircleList_Reset(CircleList* list); CircleListNode* CircleList_Current(TCircleList* list);]]></description>
</item>
<item>
    <title>Linklist</title>
    <link>https://Janyd-zz.github.io/18_linklist/</link>
    <pubDate>Tue, 07 Jan 2025 14:39:47 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://Janyd-zz.github.io/18_linklist/</guid>
    <description><![CDATA[linklist.h 1 2 3 4 5 6 7 8 9 10 11 12 13 14 typedef void LinkList; typedef struct _tag_LinkListNode { struct _tag_LinkListNode *next; }LinkListNode; LinkList *LinkList_Create(); void LinkList_Destroy(LinkList *list); void LinkList_Clear(LinkList *list); int LinkList_Length(LinkList *list); int LinkList_Insert(LinkList *list, LinkListNode *node, int pos); LinkListNode *LinkList_Get(LinkList *list, int pos); LinkListNode *LinkList_Delete(LinkList *list, int pos); linklist.c 1 2 3 4 5 6 typedef struct _tag_LinkList { LinkListNode header; int length; }TLinkList;]]></description>
</item>
<item>
    <title>SOME/IP 概述</title>
    <link>https://Janyd-zz.github.io/16_someip_%E6%A6%82%E8%BF%B0/</link>
    <pubDate>Sun, 15 Sep 2024 21:29:41 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://Janyd-zz.github.io/16_someip_%E6%A6%82%E8%BF%B0/</guid>
    <description><![CDATA[0 总述 以下只是些东拼西凑的关于SOME/IP的简单介绍，如果想要基于协议进行项目开发，还请进一步查看参 考文献中标准协议的规范说明文档，进行系]]></description>
</item>
<item>
    <title>Autosar概念：Callout与Callback</title>
    <link>https://Janyd-zz.github.io/9_autosar%E6%A6%82%E5%BF%B5callout%E4%B8%8Ecallback/</link>
    <pubDate>Tue, 29 Mar 2022 20:18:26 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://Janyd-zz.github.io/9_autosar%E6%A6%82%E5%BF%B5callout%E4%B8%8Ecallback/</guid>
    <description><![CDATA[在Autosar里面，Callout与Callback分别是什么？两者区别是什么？ 1 Callback Autosar规范里是如何定义“Callback”的，]]></description>
</item>
</channel>
</rss>
